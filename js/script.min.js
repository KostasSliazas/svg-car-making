!function(){"use strict";function generateUniqueString(key){function getRandomString(length=6){const chars="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";let randomString="";for(let i=0;i<length;i++)randomString+=chars.charAt(Math.floor(Math.random()*chars.length));return randomString}let uniqueString=getRandomString();for(;localStorage.getItem(key+uniqueString);)uniqueString=getRandomString();return localStorage.setItem(key+uniqueString,"true"),uniqueString}function randomIntFromInterval(min,max){return Math.floor(Math.random()*(max-min+1)+min)}function getRandomHexColor(){return"#"+Math.floor(16777215*Math.random()).toString(16).padStart(6,"0")}function changeStopColor(gradientId,stopIndex,newColor){const gradient=document.getElementById(gradientId),stops=gradient.querySelectorAll("stop");stopIndex>=0&&stopIndex<stops.length?stops[stopIndex].setAttribute("stop-color",newColor):console.error("Invalid stop index")}async function loop(path,i){let isDragging=!1,offsetX,offsetY;path.addEventListener("mousedown",e=>{isDragging=!0,path.style.cursor="move"}),document.addEventListener("mousemove",e=>{if(isDragging){const newX=e.clientX-void 0,newY=e.clientY-void 0;path.setAttribute("transform",`translate(${newX}, ${newY})`)}}),document.addEventListener("mouseup",()=>{isDragging&&(isDragging=!1,path.style.cursor="default")}),await new Promise(resolve=>{setTimeout(async()=>{path.style.removeProperty("transform"),resolve()},9)})}const colors=[];function addListenersAndExport(ids,callback){ids.forEach((id,index)=>{const element=document.getElementById(id);element?element.addEventListener("input",(function(){const color=this.value;colors[index]=color,updateGradientStop(index,color),callback(id,index,color)})):console.warn(`Element with ID "${id}" not found.`)})}function updateGradientStop(index,color){const label=document.querySelector(`label[for="color${index+1}"]`);label&&(label.textContent=`${color}`);const input=document.getElementById(`color${index+1}`);input&&(input.value=color)}async function init(){addListenersAndExport(["color1","color2","color3"],(id,index,color)=>{changeStopColor("b",index,color)}),document.getElementById("randomize").addEventListener("click",()=>{for(let i=0;i<3;i++){const color=getRandomHexColor();changeStopColor("b",i,color),updateGradientStop(i,color)}});const elements=document.querySelectorAll("path"),svg=document.getElementById("svg");async function movePaths(randomize=!1){if(randomize)elements.forEach(path=>{path.style.transform=`translate(${randomIntFromInterval(-2e3,-5e3)}px, ${randomIntFromInterval(-2e3,-5e3)}px)`});else{for(let i=0;i<elements.length;i++)await loop(elements[i],i);document.getElementById("loader").classList.add("hidden")}}document.addEventListener("click",()=>{[document.getElementsByClassName("hidden")[1],document.getElementById("loader")].forEach(e=>e.classList.remove("hidden")),movePaths(!1)},{once:!0}),document.getElementById("exportButton").addEventListener("click",()=>{const uniqueId=generateUniqueString("my-car_"),serializer=new XMLSerializer;let svgString=serializer.serializeToString(svg);svgString=svgString.replace(/>\s+</g,"><").replace(/\s*<!--.*?-->\s*/g,"");const blob=new Blob([svgString],{type:"image/svg+xml;charset=utf-8"}),link=document.createElement("a");link.href=URL.createObjectURL(blob),link.download=`my-car-${uniqueId}.svg`,link.click(),URL.revokeObjectURL(link.href);const blobs=new Blob([colors.join("\n")],{type:"text/plain"}),links=document.createElement("a");links.href=URL.createObjectURL(blobs),links.download=`my-car-${uniqueId}.txt`,links.click()}),movePaths(!0)}document.addEventListener("DOMContentLoaded",init,{once:!0}),document.getElementById("close").addEventListener("click",e=>{e.currentTarget.parentElement.className="hidden"})}();